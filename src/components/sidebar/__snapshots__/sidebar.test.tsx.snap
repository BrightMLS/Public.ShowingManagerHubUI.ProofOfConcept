// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SideBar /> Component should render without crashing 1`] = `
<WithStyles(ForwardRef(Grid))
  container={true}
  item={true}
>
  <WithStyles(ForwardRef(Toolbar))>
    <WithStyles(ForwardRef(IconButton))
      aria-label="open drawer"
      className="makeStyles-menuButton-3"
      color="inherit"
      edge="start"
      onClick={[Function]}
    >
      <Memo(ForwardRef(MenuIcon)) />
    </WithStyles(ForwardRef(IconButton))>
  </WithStyles(ForwardRef(Toolbar))>
  <nav
    aria-label="mailbox folders"
    className="makeStyles-drawer-2"
  >
    <Hidden
      implementation="css"
      smUp={true}
    >
      <WithStyles(ForwardRef(Drawer))
        ModalProps={
          Object {
            "keepMounted": true,
          }
        }
        anchor="left"
        classes={
          Object {
            "paper": "makeStyles-drawerPaper-5",
            "root": "makeStyles-root-1",
          }
        }
        onClose={[Function]}
        open={false}
        variant="temporary"
      >
        <WithStyles(ForwardRef(List))>
          <WithStyles(ForwardRef(ListItem))
            button={true}
            classes={
              Object {
                "selected": "makeStyles-listItem-7",
              }
            }
            key="0"
            selected={true}
          >
            <WithStyles(ForwardRef(ListItemText))
              className="makeStyles-textSelected-8"
              onClick={[Function]}
              primary="Login"
            />
          </WithStyles(ForwardRef(ListItem))>
          <WithStyles(ForwardRef(ListItem))
            button={true}
            classes={
              Object {
                "selected": "makeStyles-listItem-7",
              }
            }
            key="1"
            selected={false}
          >
            <WithStyles(ForwardRef(ListItemText))
              className="makeStyles-text-6"
              onClick={[Function]}
              primary="Register Organization"
            />
          </WithStyles(ForwardRef(ListItem))>
          <WithStyles(ForwardRef(ListItem))
            button={true}
            classes={
              Object {
                "selected": "makeStyles-listItem-7",
              }
            }
            key="2"
            selected={false}
          >
            <WithStyles(ForwardRef(ListItemText))
              className="makeStyles-text-6"
              onClick={[Function]}
              primary="Register Application"
            />
          </WithStyles(ForwardRef(ListItem))>
        </WithStyles(ForwardRef(List))>
      </WithStyles(ForwardRef(Drawer))>
    </Hidden>
    <Hidden
      implementation="css"
      xsDown={true}
    >
      <WithStyles(ForwardRef(Drawer))
        classes={
          Object {
            "paper": "makeStyles-drawerPaper-5",
          }
        }
        open={true}
        variant="permanent"
      >
        <WithStyles(ForwardRef(List))>
          <WithStyles(ForwardRef(ListItem))
            button={true}
            classes={
              Object {
                "selected": "makeStyles-listItem-7",
              }
            }
            key="0"
            selected={true}
          >
            <WithStyles(ForwardRef(ListItemText))
              className="makeStyles-textSelected-8"
              onClick={[Function]}
              primary="Login"
            />
          </WithStyles(ForwardRef(ListItem))>
          <WithStyles(ForwardRef(ListItem))
            button={true}
            classes={
              Object {
                "selected": "makeStyles-listItem-7",
              }
            }
            key="1"
            selected={false}
          >
            <WithStyles(ForwardRef(ListItemText))
              className="makeStyles-text-6"
              onClick={[Function]}
              primary="Register Organization"
            />
          </WithStyles(ForwardRef(ListItem))>
          <WithStyles(ForwardRef(ListItem))
            button={true}
            classes={
              Object {
                "selected": "makeStyles-listItem-7",
              }
            }
            key="2"
            selected={false}
          >
            <WithStyles(ForwardRef(ListItemText))
              className="makeStyles-text-6"
              onClick={[Function]}
              primary="Register Application"
            />
          </WithStyles(ForwardRef(ListItem))>
        </WithStyles(ForwardRef(List))>
      </WithStyles(ForwardRef(Drawer))>
    </Hidden>
  </nav>
</WithStyles(ForwardRef(Grid))>
`;
